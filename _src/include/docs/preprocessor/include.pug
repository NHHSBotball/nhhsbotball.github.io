html
  head
    link(href='http://fonts.googleapis.com/icon?family=Material+Icons', rel='stylesheet')
    link(href='/css/base.css', rel='stylesheet', type='text/css')
    link(href='/css/materialize.min.css', media='screen,projection', rel='stylesheet', type='text/css')
    link(href='/css/docs.css', rel='stylesheet', type='text/css')
    link(href='../imgs/logos/botguy.png', rel='icon')
    title Botball Documentation - Tutorial
    meta(content='#00796b', name='theme-color')
    meta(content='width=device-width, initial-scale=1.0', name='viewport')
  body
    script(src='https://code.jquery.com/jquery-2.1.1.min.js', type='text/javascript')
    script(src='/js/materialize.min.js', type='text/javascript')
    script.
      $(document).ready(function () {
      $('.button-collapse').sideNav({
      draggable: true
      });
      $(".active").parent().parent().siblings()[0].click() })
    header
      ul#slide-out.side-nav.fixed
        li.red.lighten-1(style='height: 130px')
          .userView
            h5.white-text
              a.white-text(href='/docs/index.html') Index
        li
          a(href='/docs/tutorial.html') Tutorial
        li.no-padding
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | Data Objects
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/data-objects/index.html') Introduction
                  li
                    a(href='/docs/data-objects/variables.html') Variables
                  li
                    a(href='/docs/data-objects/constants.html') Constants
                  li
                    a(href='/docs/data-objects/data-types.html') Data Types
                  li
                    a(href='/docs/data-objects/arrays.html') Arrays
                  li
                    a(href='/docs/data-objects/structures.html') Structures
                  li
                    a(href='/docs/data-objects/initialization-examples.html') Initialization Examples
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | Statements and Expressions
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/statements-and-expressions/index.html') Introduction
                  li
                    a(href='/docs/statements-and-expressions/operators.html') Operators
                  li
                    a(href='/docs/statements-and-expressions/control-flow.html') Control Flow
        li
          a(href='/docs/tutorial.html') Style
        li
          a(href='/docs/tutorial.html') Debugging
        li.no-padding
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | Printing
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/printing/index.html') Introduction
                  li
                    a(href='/docs/printing/examples.html') Examples
                  li
                    a(href='/docs/printing/printf-codes.html') printf Codes
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | Preprocessor
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/preprocessor/index.html') Introduction
                  li
                    a(href='/docs/preprocessor/directives.html') Directives
                  li.active
                    a(href='/docs/preprocessor/include.html') Include
                  li
                    a(href='/docs/preprocessor/macros.html') Macros
                  li
                    a(href='/docs/preprocessor/conditional-compilation.html') Conditional Compilation
        li
          a(href='/docs/lib/math.html') Math Library
        li.no-padding
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | KIPR Wallaby/Link
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/lib/kipr/common-functions.html') Common Functions
                  li
                    a(href='/docs/lib/kipr/functions.html') Functions List
                  li
                    a(href='/docs/lib/kipr/camera.html') Camera Functions
                  li
                    a(href='/docs/lib/kipr/graphics.html') Graphics Functions
                  li
                    a(href='/docs/lib/kipr/depth.html') Depth Sensor Functions
                  li
                    a(href='/docs/lib/kipr/usb.html') File I/O Functions
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | iRobot Create
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/lib/kipr/create/index.html') Introduction
                  li
                    a(href='/docs/lib/kipr/create/serial.html') Serial Functions
                  li
                    a(href='/docs/lib/kipr/create/configuration.html') Configuration Functions
                  li
                    a(href='/docs/lib/kipr/create/movement.html') Movement Functions
                  li
                    a(href='/docs/lib/kipr/create/sensors.html') Sensor Functions
                  li
                    a(href='/docs/lib/kipr/create/battery.html') Battery Functions
                  li
                    a(href='/docs/lib/kipr/create/built-ins.html') Built-In Functions
                  li
                    a(href='/docs/lib/kipr/create/music-leds.html') LED and Music Functions
        li
          a(href='/docs/lib/kipr/botball.html') Botball Functions
        li
          a(href='/docs/lib/kipr/threads.html') Threads
        li.no-padding
          ul.collapsible.collapsible-accordion
            li
              a.collapsible-header
                i.material-icons arrow_drop_down
                | Motors and Sensors
              .collapsible-body(style='display: block')
                ul
                  li
                    a(href='/docs/lib/kipr/info/digital-analog-sensors.html') Analog and Digital Sensors
                  li
                    a(href='/docs/lib/kipr/info/usb-sensors.html') USB Sensors
                  li
                    a(href='/docs/lib/kipr/info/motors-servos.html') Motors and Servos
                  li
                    a(href='/docs/lib/kipr/info/simulator.html') Simulator
        li
          a(href='/docs/full.html') Full Documentation
      nav.nav-extended.red.lighten-2
        .nav-wrapper
          .col.s12
            a.button-collapse(data-activates='slide-out', href='#', style='font-size: 50px')
              i.material-icons menu
            a#top.brand-logo.waves-effect(href='/docs/index.html') Botball Documentation
        .nav-wrapper
          .col.s12
            a.breadcrumb(href='/docs/preprocessor/index.html') Preprocessor
            a.breadcrumb(href='#!') Include
    main.row
      .container.col.s12
        // END HEADER
        // Preprocessor_Include
        a(name='Preprocessor_Include')
        h3 Preprocessor Include
        p
          | The preprocessor
          | #include directive is used to insert either a system header file or a user defined header file into
          | program code. System header files typically provide the prototypes for the pre-compiled functions in standard
          | C library. They also provide configuration variables in the form of macros (e.g., NULL). Some programming
          | environments may include the more common system header files automatically, depending on how much control
          | the programmer is expected to exert over the programming environment. System header files incorporate
          | #ifndef statements to avoid introducing duplicated definitions, since a system header file may appear
          | in more than one user header file included by a function.
        p
          | If the file name for a
          | #include directive is enclosed in "pointy brackets" ( 
          code &lt; &gt;
          | ) then the preprocessor
          |  searches for the file in the system's directory of header files.
        p
          | If the file name for
          | #include directive is enclosed in (double) quote marks, then the preprocessor searches for the file
          | in the user's file space. Unless the file is located along the user's file path, the path information for
          | locating the file must also be included (e.g., for a USB stick). The contents of the file can be anything,
          | and will be passed through the C preprocessor while being inserted, which will process any preprocessor directives
          | in the file. For user header files, care needs to be taken with any variable declarations incorporated into
          | the file (to avoid duplicates caused by #includes across multiple program files) and in general function
          | definitions should not be imbedded in header files rather than pre-compiled for a user library. To sum up,
          | when
          | #include is used with a carelessly prepared user header file, a compiler error such as a duplicated
          | global variable name may occur, or a preprocessor error such as a duplicated macro name may occur.
        p
          | The following provides an example of each kind of
          | #include directive:
        .Indent
          code
            | #include &lt;stdio.h&gt; // insert function prototypes for system I/O functions 
            br
            | #include &quot;mylib.c&quot; // insert my function library 
        p
          | A few of the more commonly used system header files providing definitions for pre-compiled functions in the standard
          | C library follow:
        .Indent
          code &lt;stdlib.h&gt;
          |  [numeric conversion, memory allocation, functions such as 
          code rand
          | ]
          br
          code &lt;stdio.h&gt;
          |  [I/O functions such as 
          code printf
          | ]
          br
          code &lt;math.h&gt;
          |  [math functions such as 
          code sqrt
          | ]
          br
          code &lt;string.h&gt;
          |  [string functions such as 
          code strcpy
          | ]
          br
          code &lt;time.h&gt;
          |  [date and time functions such as 
          code time
          | ]
          br
          code &lt;stdarg.h&gt;
          |  [functions with varying number of arguments (i.e., ones using the 
          code ...
          |  argument)]
        // START FOOTER

