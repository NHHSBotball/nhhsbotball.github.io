extends ../../../exclude/docbase

block vars
  - var selected = 'printing/index'
  - var path = ['Printing', 'Index']

block content
  // Display_Screen_Printing
  a(name='Display_Screen_Printing')
  h2 Display Screen Printing
  p
    | The C function 
    code printf
    |  is used for printing to the KIPR Robot Controller display screen, where print
    |  output is wrapped to subsequent lines if too long for the display, and is scrolled upward as the capacity
    |  of the screen is exceeded. For controlled printing to the display, the KIPR Robot Controller Library additionally
    |  includes the 
    code display_printf
    |  version of 
    code printf
    | , which prints starting at a specified ( 
    code column, row
    | ) position on the KIPR
    |  Robot Controller display and which doesn't wrap text which exceeds screen width. The number of rows available
    |  for controlled printing is different for the 3 button (A,B,C) version of the KIPR Robot Controller program
    |  console screen than for the 6 button (X,Y,Z,A,B,C) version.
  p
    | The syntax of 
    code printf
    |  is the following:
  .Indent
    code printf(&lt;
    i format-string
    code &gt, ... );
  p
    | The 
    code &lt;
    i format-string
    code &gt;
    |  is a character string which includes 0 or more '%'
    |  codes. For each % code, a corresponding argument is supplied to 
    code printf
    |  after the 
    code &lt;
    i format-string
    code &gt;
    |  to provide the value to be formatted and inserted into the print output in place of its % code.
  p
  p
    | It is important to note that in resolving % codes 
    code printf
    |  ignores the data type of the corresponding
    |  argument. In other words, since 
    code printf
    |  does not require a data type match between an
    |  argument and its corresponding % code, the argument will not be automatically coerced as it would
    |  be for an assignment statement. This is particularly important to keep in mind when both integer
    |  and floating point values are being used.
  p The use of % code formatting is best illustrated by some examples.
  // START FOOTER

